{"version":3,"sources":["hooks/useTodoState.js","hooks/useFilterState.js","components/Forms/TextForm.js","components/Forms/RadioForm.js","components/TodoForm.js","components/TodoList.js","components/Forms/CheckBoxForm.js","components/FilterForm.js","components/App.js","serviceWorker.js","index.js"],"names":["useTodoState","init","_useState","useState","_useState2","Object","slicedToArray","todos","saveTodos","addTodo","todo","newTodos","concat","toConsumableArray","id","Date","now","title","priority","deadline","state","deleteTodo","todoId","filter","changeTodoState","map","objectSpread","filterTodos","filters","every","_ref","_ref2","key","sort","a","b","useFilterState","setFilter","handleFilter","defineProperty","TextForm","props","react_default","createElement","TextField_default","required","autoFocus","label","placeholder","fullWidth","margin","variant","InputLabelProps","shrink","onChange","e","value","RadioForm","Fragment","FormControl_default","component","FormLabel_default","legend","RadioGroup_default","aria-label","name","row","labels","FormControlLabel_default","control","Radio_default","color","labelPlacement","TodoForm","setTodo","onSubmit","preventDefault","Grid_default","container","direction","justify","alignItems","item","xs","Forms_TextForm","target","Forms_RadioForm","entries","deadlineLabels","high","medium","low","Button_default","type","get_date","timestamp","_d","Y","getFullYear","m","getMonth","slice","d","getDate","H","getHours","i","getMinutes","s","getSeconds","TodoList","isCompleted","HighStyle","doneStyle","textDecoration","List_default","Divider_default","ListItem_default","divider","button","onClick","style","ListItemIcon_default","Check_default","NewReleases_default","CheckBoxOutlineBlank_default","ListItemText_default","inset","primary","secondary","ListItemSecondaryAction_default","IconButton_default","Delete_default","CheckBoxForm","Checkbox_default","checked","labelText","FilterForm","Forms_CheckBoxForm","labelKey","length","handleFileter","setDefaultFilter","fromEntries","App","stateLabels","incomplete","complete","today","tomorrow","week","other","_useTodoState","_useFilterState","stateFilter","handleStateFileter","_useFilterState2","deadlineFilter","handleDeadlineFileter","components_TodoForm","components_FilterForm","components_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46f11f08.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useTodoState = (init) => {\n    const [todos, saveTodos] = useState(init);\n\n    return {\n        todos,\n        addTodo: (todo) => {\n            const newTodos = [...todos, { id: Date.now(), title: todo.title, priority: todo.priority, deadline: todo.deadline, state: 'incomplete' }];\n            saveTodos(newTodos);\n        },\n        deleteTodo: (todoId) => {\n            const newTodos = todos.filter(todo => todo.id !== todoId);\n            saveTodos(newTodos);\n        },\n        changeTodoState: (todoId) => {\n            const newTodos = todos.map(todo => todo.id === todoId ? { ...todo, state: todo.state === 'complete' ? 'incomplete' : 'complete' } : todo);\n            saveTodos(newTodos);\n        },\n        // filters = [[key, filter], []]\n        filterTodos: filters => todos.filter(todo =>\n            filters.every(([key, filter]) =>\n                filter[todo[key]]\n            )).sort((a, b) => b.id - a.id)\n    }\n};\n\nexport default useTodoState;","import { useState } from 'react';\n\n// filter: {key1: true, key2: false}\nconst useFilterState = (init) => {\n\n    const [filter, setFilter] = useState(init);\n\n    return {\n        filter,\n        handleFilter: (key) => {\n            setFilter({ ...filter, [key]: !filter[key] })\n        },\n    }\n};\n\nexport default useFilterState;","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst TextForm = (props) => {\n    return (\n        <TextField\n            required\n            autoFocus\n            label={props.label}\n            placeholder={props.placeholder}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n            onChange={e => props.onChange(e)}\n            value={props.value}\n        />\n    );\n};\n\nexport default TextForm;","import React from 'react';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst RadioForm = (props) => {\n    return (\n        <>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">{props.legend}</FormLabel>\n                <RadioGroup\n                    aria-label={props.legend}\n                    name={props.legend}\n                    value={props.value}\n                    onChange={(e) => props.onChange(e)}\n                    row\n                >\n                    {props.labels.map(([value, label]) => (\n                        <FormControlLabel\n                            key={value}\n                            value={value}\n                            control={<Radio color=\"primary\" />}\n                            label={label}\n                            labelPlacement=\"end\"\n                        />\n                    ))}\n                </RadioGroup>\n            </FormControl>\n        </>\n    );\n};\n\nexport default RadioForm;","import React, { useState } from 'react';\n\nimport TextForm from './Forms/TextForm';\nimport RadioForm from './Forms/RadioForm';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\n\nconst TodoForm = (props) => {\n\n    const priorityLabels = {\n        high: \"高い\",\n        medium: \"普通\",\n        low: \"低い\",\n    }\n\n    const initial = { title: '', priority: 'medium', deadline: 'other' };\n\n    const [todo, setTodo] = useState(initial);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        props.onSubmit(todo);\n        setTodo({ ...todo, title: '' });\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={12}>\n                    <TextForm\n                        label={props.label}\n                        placeholder={props.placeholder}\n                        onChange={e => setTodo({ ...todo, title: e.target.value })}\n                        value={todo.title}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <RadioForm\n                        legend=\"期限\"\n                        labels={Object.entries(props.deadlineLabels)}\n                        value={todo.deadline}\n                        onChange={e => setTodo({ ...todo, deadline: e.target.value })}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <RadioForm\n                        legend=\"優先度\"\n                        labels={Object.entries(priorityLabels)}\n                        value={todo.priority}\n                        onChange={e => setTodo({ ...todo, priority: e.target.value })}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">add</Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nexport default TodoForm;","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n// import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n// import Button from '@material-ui/core/Button';\nimport HighIcon from '@material-ui/icons/NewReleases';\nimport MediumIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst get_date = (timestamp) => {\n    const _d = new Date(timestamp);\n    const Y = _d.getFullYear();\n    const m = (\"0\" + (_d.getMonth() + 1)).slice(-2);\n    const d = (\"0\" + _d.getDate()).slice(-2);\n    const H = (\"0\" + _d.getHours()).slice(-2);\n    const i = (\"0\" + _d.getMinutes()).slice(-2);\n    const s = (\"0\" + _d.getSeconds()).slice(-2);\n    return `${Y}/${m}/${d} ${H}:${i}:${s}`;\n}\n\nconst TodoList = (props) => {\n    const isCompleted = todo => todo.state === 'complete';\n\n    const HighStyle = {\n        // backgroundColor: \"#FFF2F2\"\n    }\n    const doneStyle = {\n        color: \"gray\",\n        textDecoration: \"line-through\"\n    }\n\n    return (\n        <List component=\"nav\">\n            <Divider />\n            {props.todos.map(todo => (\n                <ListItem\n                    key={todo.id}\n                    divider button\n                    onClick={() => props.changeTodoState(todo.id)}\n                    style={todo.priority === 'high' && !isCompleted(todo) ? HighStyle : {}}\n                >\n                    <ListItemIcon>\n                        {isCompleted(todo) ? <CheckIcon /> : todo.priority === 'high' ? <HighIcon color=\"secondary\" /> : <MediumIcon />}\n                    </ListItemIcon>\n                    <ListItemText\n                        inset={true}\n                        primary={\n                            <span style={isCompleted(todo) ? doneStyle : {}}>{todo.title}</span>\n                        }\n                        secondary={\n                            <>\n                                {get_date(todo.id)}<br />\n                                {todo.deadline}\n                            </>\n                        }\n                    />\n                    <ListItemSecondaryAction>\n                        {isCompleted(todo) &&\n                            <IconButton onClick={() => props.deleteTodo(todo.id)}>\n                                <DeleteIcon />\n                            </IconButton>\n                        }\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))}\n        </List>\n    );\n};\n\nexport default TodoList;","import React from 'react';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// labels=[[key, label], [], ...]\nconst CheckBoxForm = (props) => {\n    return (\n        <>\n            {props.labels.map(([key, label]) => (\n                <FormControlLabel\n                    key={key}\n                    control={\n                        <Checkbox\n                            color=\"primary\"\n                            checked={props.filter[key]}\n                            onChange={() => props.onChange(key)}\n                            value={label}\n                        />\n                    }\n                    label={props.labelText ? props.labelText(key, label) : label}\n                />\n            ))}\n        </>\n    );\n};\n\nexport default CheckBoxForm;","import React from 'react';\n\nimport CheckBoxForm from './Forms/CheckBoxForm';\n\n\nconst FilterForm = (props) => {\n    return (\n        <CheckBoxForm\n            labelText={(key, label) => `${label}(${props.todos.filter(todo => todo[props.labelKey] === key).length})`}\n            filter={props.filter}\n            labels={Object.entries(props.labels)}\n            onChange={(key) => props.handleFileter(key)}\n        />\n    );\n};\n\nexport default FilterForm;","import React from 'react';\n\nimport useTodoState from '../hooks/useTodoState';\nimport useFilterState from '../hooks/useFilterState';\n\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport FilterForm from './FilterForm';\n\n// {key1: label2, key2: label2} => {key1: true, key2: true}\nconst setDefaultFilter = (labels) => Object.fromEntries(Object.entries(labels).map(([key, val]) => [key, true]));\n\nconst App = () => {\n\n    const stateLabels = {\n        incomplete: \"未完了\",\n        complete: \"完了済み\",\n    }\n    const deadlineLabels = {\n        today: \"今日中\",\n        tomorrow: \"明日中\",\n        week: \"一週間\",\n        other: \"未定\",\n    }\n\n    const { todos, addTodo, deleteTodo, changeTodoState, filterTodos } = useTodoState([]);\n\n    const { filter: stateFilter, handleFilter: handleStateFileter } = useFilterState(setDefaultFilter(stateLabels));\n\n    const { filter: deadlineFilter, handleFilter: handleDeadlineFileter } = useFilterState(setDefaultFilter(deadlineLabels));\n\n    return (\n        <div>\n            <TodoForm\n                onSubmit={addTodo}\n                label=\"タスクを記入してください\"\n                placeholder=\"（例）Wantedlyフロントエンド課題\"\n                deadlineLabels={deadlineLabels}\n            />\n            <FilterForm\n                todos={todos}\n                labels={stateLabels}\n                labelKey=\"state\"\n                filter={stateFilter}\n                handleFileter={handleStateFileter}\n            />\n            <br />\n            <FilterForm\n                todos={todos}\n                labels={deadlineLabels}\n                labelKey=\"deadline\"\n                filter={deadlineFilter}\n                handleFileter={handleDeadlineFileter}\n            />\n            <TodoList\n                todos={filterTodos([[\"state\", stateFilter], [\"deadline\", deadlineFilter]])}\n                deleteTodo={deleteTodo}\n                changeTodoState={changeTodoState}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}